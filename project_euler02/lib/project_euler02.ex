defmodule ProjectEuler02 do
  @moduledoc """
  Documentation for `ProjectEuler02`.
  """

  @doc """
  Even Fibonacci numbers

  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

  ## Examples

      iex> ProjectEuler02.fibonacci(10)
      10

  """
  def fibonacci(max_range)  do
    is_fibonacci([2,1], max_range)
    |> Enum.filter(fn a -> rem(a,2) == 0 end)
    |> Enum.sum()


  end

  defp is_fibonacci([actual, previous | _tail] = list_fib, max_range) do
    next = actual + previous

    cond do
      next>max_range ->
        list_fib
      next<max_range ->
        is_fibonacci([next] ++ list_fib, max_range)

    end


  end
end
